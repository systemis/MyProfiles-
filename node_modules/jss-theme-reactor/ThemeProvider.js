'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

exports.createThemeProvider = createThemeProvider;

var _react = require('react');

var _jss = require('jss');

var _jssPresetDefault = require('jss-preset-default');

var _jssPresetDefault2 = _interopRequireDefault(_jssPresetDefault);

var _styleManager = require('./styleManager');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function createThemeProvider() {
  var createDefaultTheme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {
    return {};
  };
  var createJss = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {
    return (0, _jss.create)((0, _jssPresetDefault2.default)());
  };

  var ThemeProvider = function (_Component) {
    (0, _inherits3.default)(ThemeProvider, _Component);

    function ThemeProvider() {
      var _ref;

      var _temp, _this, _ret;

      (0, _classCallCheck3.default)(this, ThemeProvider);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = ThemeProvider.__proto__ || (0, _getPrototypeOf2.default)(ThemeProvider)).call.apply(_ref, [this].concat(args))), _this), _this.theme = undefined, _this.styleManager = undefined, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    (0, _createClass3.default)(ThemeProvider, [{
      key: 'getChildContext',
      value: function getChildContext() {
        var theme = this.theme,
            styleManager = this.styleManager;

        return {
          theme: theme,
          styleManager: styleManager
        };
      }
    }, {
      key: 'componentWillMount',
      value: function componentWillMount() {
        var _ThemeProvider$create = ThemeProvider.createDefaultContext(this.props),
            theme = _ThemeProvider$create.theme,
            styleManager = _ThemeProvider$create.styleManager;

        this.theme = theme;
        this.styleManager = styleManager;
      }
    }, {
      key: 'componentWillUpdate',
      value: function componentWillUpdate(nextProps) {
        if (this.theme && nextProps.theme && nextProps.theme !== this.theme) {
          this.theme = nextProps.theme;

          if (this.styleManager) {
            this.styleManager.updateTheme(nextProps.theme);
          }
        }
      }
    }, {
      key: 'render',
      value: function render() {
        return this.props.children;
      }
    }], [{
      key: 'createDefaultContext',
      value: function createDefaultContext() {
        var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

        var theme = props.theme || createDefaultTheme();
        var styleManager = props.styleManager || (0, _styleManager.createStyleManager)({
          theme: theme,
          jss: createJss()
        });
        return { theme: theme, styleManager: styleManager };
      }
    }]);
    return ThemeProvider;
  }(_react.Component);

  ThemeProvider.propTypes = {
    children: _react.PropTypes.node.isRequired,
    styleManager: _react.PropTypes.object,
    theme: _react.PropTypes.object
  };
  ThemeProvider.childContextTypes = {
    styleManager: _react.PropTypes.object.isRequired,
    theme: _react.PropTypes.object.isRequired
  };


  return ThemeProvider;
}

exports.default = createThemeProvider();